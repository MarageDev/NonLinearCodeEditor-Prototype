[gd_scene load_steps=17 format=3 uid="uid://ce2uyl4nvhvwh"]

[ext_resource type="PackedScene" uid="uid://fwj01r07gxv0" path="res://UI_Elements/SimpleRectFrame/RectFrame.tscn" id="1_otqhr"]
[ext_resource type="PackedScene" uid="uid://b3dkwicgj44mw" path="res://Node/SingleCodeNode/SingleCodeNode.tscn" id="3_e82gf"]
[ext_resource type="Script" uid="uid://bmbgb507hbrvx" path="res://Node/CodeNodeResource.gd" id="5_6qk4v"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_cfx8f"]
content_margin_left = 8.0
content_margin_top = 4.0
content_margin_right = 8.0
content_margin_bottom = 4.0
bg_color = Color(0.164706, 0.164706, 0.164706, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_color = Color(0.141176, 0.141176, 0.141176, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
anti_aliasing = false

[sub_resource type="Resource" id="Resource_qrjlo"]
script = ExtResource("5_6qk4v")
content = "# Helper to finalize and add a block if not empty"
code_index = 3

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_bekwb"]
content_margin_left = 8.0
content_margin_top = 4.0
content_margin_right = 8.0
content_margin_bottom = 4.0
bg_color = Color(0.164706, 0.164706, 0.164706, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_color = Color(0.141176, 0.141176, 0.141176, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
anti_aliasing = false

[sub_resource type="Resource" id="Resource_7ubwq"]
script = ExtResource("5_6qk4v")
content = "func _finalize_block(current_block: Array[String], blocks: Array[String]) -> void:
	if current_block.size() > 0:
		blocks.append(\"\\n\".join(current_block))
"
code_index = 4

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_lj7q2"]
content_margin_left = 8.0
content_margin_top = 4.0
content_margin_right = 8.0
content_margin_bottom = 4.0
bg_color = Color(0.164706, 0.164706, 0.164706, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_color = Color(0.141176, 0.141176, 0.141176, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
anti_aliasing = false

[sub_resource type="Resource" id="Resource_qmqb5"]
script = ExtResource("5_6qk4v")
content = "func _ready() -> void:
	var blocks: Array[String] = SeparateCodeBlocksInFile(file_path, separators)
	for i in blocks:
		var newGraphCodeNode: GraphCodeNode = preload(\"res://Node/SingleCodeNode/SingleCodeNode.tscn\").instantiate()
		newGraphCodeNode.node_title = str(randi_range(0, 999))
		newGraphCodeNode.node_content = i
		graph_edit.add_child(newGraphCodeNode)
		print(i)
"
code_index = 1

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_s3wi3"]
content_margin_left = 8.0
content_margin_top = 4.0
content_margin_right = 8.0
content_margin_bottom = 4.0
bg_color = Color(0.164706, 0.164706, 0.164706, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_color = Color(0.141176, 0.141176, 0.141176, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
anti_aliasing = false

[sub_resource type="Resource" id="Resource_3pptg"]
script = ExtResource("5_6qk4v")
content = "extends Control

@export var file_path: String = \"\"
@export var separators: Array[String] = []
@onready var graph_edit: GraphEdit = $GraphEdit
"
code_index = 0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_i0jgn"]
bg_color = Color(0.09, 0, 0.0188496, 1)
border_width_left = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.14, 0, 0.0293216, 1)
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
anti_aliasing = false

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_kpm1j"]
bg_color = Color(0.09, 0, 0.0188496, 1)
border_width_left = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color(0.53, 0.2968, 0.345641, 1)
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
anti_aliasing = false

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_peuwy"]
content_margin_left = 8.0
content_margin_top = 4.0
content_margin_right = 8.0
content_margin_bottom = 4.0
bg_color = Color(0.16, 0, 0.0335104, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_color = Color(0.14, 0, 0.0293216, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
anti_aliasing = false

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_2cx68"]
bg_color = Color(0.45, 0.189, 0.243664, 1)
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_color = Color(0.53, 0.2968, 0.345641, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
anti_aliasing = false

[sub_resource type="Resource" id="Resource_p75eu"]
script = ExtResource("5_6qk4v")
content = "func SeparateCodeBlocksInFile(file_path: String, separators: Array) -> Array[String]:
	var blocks: Array[String] = []
	var current_block: Array[String] = []
	var string_separators: Array[String] = []
	var regex_separators: Array[RegEx] = []

	# Separate plain strings and regex patterns
	for sep in separators:
		if typeof(sep) == TYPE_STRING and sep.begins_with(\"re:\"):
			var pattern = sep.substr(3)  # Remove \"re:\" prefix
			var regex = RegEx.new()
			var err = regex.compile(pattern)
			if err == OK:
				regex_separators.append(regex)
			else:
				push_error(\"Invalid regex pattern: %s\" % pattern)
		else:
			string_separators.append(sep)

	if not FileAccess.file_exists(file_path):
		return []

	var file = FileAccess.open(file_path, FileAccess.READ)
	while not file.eof_reached():
		var line = file.get_line()
		var is_separator = false

		# Check string separators
		for sep in string_separators:
			if line.strip_edges().begins_with(sep):
				is_separator = true
				break

		# Check regex separators if not already matched
		if not is_separator:
			for regex in regex_separators:
				if regex.search(line):
					is_separator = true
					break

		if is_separator:
			_finalize_block(current_block, blocks)
			current_block = [line]  # Start new block with separator line
		else:
			current_block.append(line)

	_finalize_block(current_block, blocks)  # Add remaining content
	file.close()
	return blocks
"
code_index = 2

[node name="GraphEdit" type="GraphEdit"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
grid_pattern = 1
snapping_enabled = false
zoom = 0.620921
minimap_size = Vector2(120, 80)
show_menu = false
show_zoom_buttons = false
show_minimap_button = false
show_arrange_button = false

[node name="@GraphFrame@284" parent="." node_paths=PackedStringArray("framed_graph_nodes") instance=ExtResource("1_otqhr")]
layout_mode = 0
offset_left = 397.389
offset_top = -24.8368
offset_right = 1083.39
offset_bottom = 950.16
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
position_offset = Vector2(640, -40)
title = "Big ass code"
tint_color = Color(0.913462, 0, 0.191316, 0.470588)
framed_graph_nodes = [NodePath("../@GraphNode@109")]

[node name="@GraphFrame@135" parent="." node_paths=PackedStringArray("framed_graph_nodes") instance=ExtResource("1_otqhr")]
layout_mode = 0
offset_left = -239.837
offset_top = 259.276
offset_right = 761.159
offset_bottom = 452.276
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
position_offset = Vector2(-386.26, 417.567)
title = "Group 806"
tint_color = Color(0.0701644, 0.526868, 1, 0.470588)
framed_graph_nodes = [NodePath("../@GraphNode@118"), NodePath("../@GraphNode@127")]

[node name="RectFrame" parent="." node_paths=PackedStringArray("framed_graph_nodes") instance=ExtResource("1_otqhr")]
layout_mode = 0
offset_left = -87.5499
offset_top = -42.2226
offset_right = 342.45
offset_bottom = 363.777
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
position_offset = Vector2(-141, -68)
title = "Beginning"
framed_graph_nodes = [NodePath("../@GraphNode@100"), NodePath("../SingleCodeNode")]

[node name="@GraphFrame@132" parent="." node_paths=PackedStringArray("framed_graph_nodes") instance=ExtResource("1_otqhr")]
layout_mode = 0
offset_left = -87.5499
offset_top = -42.2226
offset_right = 342.45
offset_bottom = 363.777
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
position_offset = Vector2(-141, -68)
title = "Group 389"
framed_graph_nodes = [NodePath("../@GraphNode@100"), NodePath("../SingleCodeNode")]

[node name="@GraphNode@118" parent="." instance=ExtResource("3_e82gf")]
layout_mode = 0
offset_left = -215.0
offset_top = 284.113
offset_right = 148.0
offset_bottom = 489.113
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
theme_override_styles/titlebar = SubResource("StyleBoxFlat_cfx8f")
position_offset = Vector2(-346.26, 457.567)
node_content = "# Helper to finalize and add a block if not empty"
CodeNodeAssociatedResource = SubResource("Resource_qrjlo")
node_index = 3

[node name="@GraphNode@127" parent="." instance=ExtResource("3_e82gf")]
layout_mode = 0
offset_left = -3.88677
offset_top = 284.113
offset_right = 577.113
offset_bottom = 489.113
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
theme_override_styles/titlebar = SubResource("StyleBoxFlat_bekwb")
position_offset = Vector2(-6.25969, 457.567)
node_content = "func _finalize_block(current_block: Array[String], blocks: Array[String]) -> void:
	if current_block.size() > 0:
		blocks.append(\"\\n\".join(current_block))
"
CodeNodeAssociatedResource = SubResource("Resource_7ubwq")
node_index = 4

[node name="@GraphNode@100" parent="." instance=ExtResource("3_e82gf")]
layout_mode = 0
offset_left = -37.8762
offset_top = 73.2687
offset_right = 235.124
offset_bottom = 278.269
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
theme_override_styles/titlebar = SubResource("StyleBoxFlat_lj7q2")
position_offset = Vector2(-61, 118)
node_content = "func _ready() -> void:
	var blocks: Array[String] = SeparateCodeBlocksInFile(file_path, separators)
	for i in blocks:
		var newGraphCodeNode: GraphCodeNode = preload(\"res://Node/SingleCodeNode/SingleCodeNode.tscn\").instantiate()
		newGraphCodeNode.node_title = str(randi_range(0, 999))
		newGraphCodeNode.node_content = i
		graph_edit.add_child(newGraphCodeNode)
		print(i)
"
CodeNodeAssociatedResource = SubResource("Resource_qmqb5")
node_index = 1

[node name="SingleCodeNode" parent="." instance=ExtResource("3_e82gf")]
layout_mode = 0
offset_left = -62.713
offset_top = -17.3858
offset_right = 287.287
offset_bottom = 187.614
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
theme_override_styles/titlebar = SubResource("StyleBoxFlat_s3wi3")
position_offset = Vector2(-101, -28)
node_content = "extends Control

@export var file_path: String = \"\"
@export var separators: Array[String] = []
@onready var graph_edit: GraphEdit = $GraphEdit
"
CodeNodeAssociatedResource = SubResource("Resource_3pptg")

[node name="@GraphNode@109" parent="." instance=ExtResource("3_e82gf")]
layout_mode = 0
offset_left = 422.226
offset_right = 1028.23
offset_bottom = 895.0
scale = Vector2(0.620921, 0.620921)
mouse_filter = 1
theme_override_styles/panel = SubResource("StyleBoxFlat_i0jgn")
theme_override_styles/panel_selected = SubResource("StyleBoxFlat_kpm1j")
theme_override_styles/titlebar = SubResource("StyleBoxFlat_peuwy")
theme_override_styles/titlebar_selected = SubResource("StyleBoxFlat_2cx68")
position_offset = Vector2(680, 0)
node_content = "func SeparateCodeBlocksInFile(file_path: String, separators: Array) -> Array[String]:
	var blocks: Array[String] = []
	var current_block: Array[String] = []
	var string_separators: Array[String] = []
	var regex_separators: Array[RegEx] = []

	# Separate plain strings and regex patterns
	for sep in separators:
		if typeof(sep) == TYPE_STRING and sep.begins_with(\"re:\"):
			var pattern = sep.substr(3)  # Remove \"re:\" prefix
			var regex = RegEx.new()
			var err = regex.compile(pattern)
			if err == OK:
				regex_separators.append(regex)
			else:
				push_error(\"Invalid regex pattern: %s\" % pattern)
		else:
			string_separators.append(sep)

	if not FileAccess.file_exists(file_path):
		return []

	var file = FileAccess.open(file_path, FileAccess.READ)
	while not file.eof_reached():
		var line = file.get_line()
		var is_separator = false

		# Check string separators
		for sep in string_separators:
			if line.strip_edges().begins_with(sep):
				is_separator = true
				break

		# Check regex separators if not already matched
		if not is_separator:
			for regex in regex_separators:
				if regex.search(line):
					is_separator = true
					break

		if is_separator:
			_finalize_block(current_block, blocks)
			current_block = [line]  # Start new block with separator line
		else:
			current_block.append(line)

	_finalize_block(current_block, blocks)  # Add remaining content
	file.close()
	return blocks
"
CodeNodeAssociatedResource = SubResource("Resource_p75eu")
node_index = 2
